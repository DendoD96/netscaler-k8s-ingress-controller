kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: cpx-ingress-k8s-role
rules:
  - apiGroups: [""]
    resources: ["services", "endpoints", "ingresses", "pods", "secrets"]
    verbs: ["*"]

  - apiGroups: ["extensions"]
    resources: ["ingresses", "ingresses/status"]
    verbs: ["*"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: cpx-ingress-k8s-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cpx-ingress-k8s-role
subjects:
- kind: ServiceAccount
  name: cpx-ingress-k8s-role
  namespace: default
apiVersion: rbac.authorization.k8s.io/v1
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cpx-ingress-k8s-role
  namespace: default
---
apiVersion: v1
kind: ReplicationController
metadata:
  name: cpx-ingress
spec:
  replicas: 1
  template:
    metadata:
      name: cpx-ingress
      labels:
        app: cpx-ingress
    spec:
      serviceAccountName: cpx-ingress-k8s-role
      containers:
      - name: cpx-ingress
        image: "quay.io/citrix/citrix-k8s-cpx-ingress:latest"
        securityContext:
           privileged: true
        env:
         - name: "EULA"
           value: "yes"
         - name: "NS_PROTOCOL"
           value: "HTTP"
         # Set port for Nitro
         - name: "NS_PORT"
           value: "9080"
        args:
          - --ingress-classes
            citrix
        imagePullPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: cpx-service
  labels:
    app: cpx-service
spec:
  type: NodePort
  ports:
  - port: 80
    protocol: TCP
    name: http
  - port: 443
    protocol: TCP
    name: https
  selector:
    app: cpx-ingress
